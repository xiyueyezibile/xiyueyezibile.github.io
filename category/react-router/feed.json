{
    "version": "https://jsonfeed.org/version/1",
    "title": "汐月也自闭了的个人博客 • All posts by \"react-router\" category",
    "description": "这个需求写不了",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/20/react-router-v6%E5%85%A8%E8%A7%A3%E6%9E%90/",
            "url": "http://example.com/2023/05/20/react-router-v6%E5%85%A8%E8%A7%A3%E6%9E%90/",
            "title": "react-router-v6全解析",
            "date_published": "2023-05-20T05:28:51.270Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p>React Router 是一个基于 <span class=\"exturl\" data-url=\"aHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC8=\">React</span> 之上的强大路由库，它可以让你向应用中快速地添加视图和数据流，同时保持页面与 URL 间的同步。</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i react-router-dom@6</span><br></pre></td></tr></table></figure>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<p>全局路由有常用两种路由模式可选： <code>HashRouter</code>  和  <code>BrowserRouter</code>  HashRouter：URL 中采用的是 hash (#) 部分去创建路由，类似<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cCUzQSUyRiUyRnd3dy5leGFtcGxlLmNvbSUyRiUyMyUyRg==\"> www.example.com/#/</span> BrowserRouter：URL 采用真实的 URL 资源，这里我们采用 <code>BrowserRouter</code>  来创建路由</p>\n<p>index.js</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom/client&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">BrowserRouter</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">BrowserRouter</span>&gt;</span></span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>App.js</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Routes</span>,<span class=\"title class_\">Route</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Home&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./About&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>about<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/home&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125;&gt;<span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">About</span> /&gt;</span>&#125;&gt;<span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n<p>Home.js</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Home.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Home</span> = (<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>about<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Home</span></span><br></pre></td></tr></table></figure>\n<p>About.js</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// About.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">About</span> = (<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">About</span></span><br></pre></td></tr></table></figure>\n<p>这样我们就完成了一个最简单的路由跳转的小 demo 了</p>\n<p>接下来我们对里面的出现的新语法进行解析</p>\n<h1 id=\"路由\"><a class=\"markdownIt-Anchor\" href=\"#路由\">#</a> 路由</h1>\n<h2 id=\"路由器router\"><a class=\"markdownIt-Anchor\" href=\"#路由器router\">#</a> 路由器 Router</h2>\n<h3 id=\"工作方式\"><a class=\"markdownIt-Anchor\" href=\"#工作方式\">#</a> 工作方式</h3>\n<p>是在组件树顶层放一个 Router 组件，然后在组件树中散落着很多 Route 组件（注意比 Router 少一个 “r”），顶层的 Router 组件负责分析监听 URL 的变化，在它保护伞之下的 Route 组件可以直接读取这些信息。Router 是 “提供者”，Route 是 “消费者”，常用的有 <code>BrowserRouter</code>  和 <code>HashRouter</code></p>\n<p>这就涉及到选择用哪种 Router 的问题，以往都是有人给我们搭好项目框架，可以直接使用，也不关心路由，当你一个人搭建框架的时候，你就会考虑这个问题了？为什么要用这个路由？？</p>\n<h3 id=\"browserrouter\"><a class=\"markdownIt-Anchor\" href=\"#browserrouter\">#</a> BrowserRouter</h3>\n<p>在 React Router 中，最外层的 API 通常就是用 BrowserRouter。BrowserRouter 的内部实现是用了  <code>history</code>  这个库和 React Context 来实现的，所以当你的用户前进后退时， <code>history</code>  这个库会记住用户的历史记录，这样需要跳转时可以直接操作。</p>\n<p>1.<strong> 基于 history 模式</strong>：页面跳转原理是使用了 HTML5 为浏览器全局的 history 对象新增了两个 API，包括  <code>history.pushState</code> 、 <code>history.replaceState</code> <br>\n2.<strong> 更加优雅</strong>： 直接拼接路径；如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cCUzQSUyRiUyRnd3dy5hYmMuY29tJTJGeHg=\">www.abc.com/xx</span><br>\n3.<strong> 后端需做请求处理</strong>： 切换路由后，请求接口路径会发生变化，后端需要配合，做处理</p>\n<h3 id=\"hashrouter\"><a class=\"markdownIt-Anchor\" href=\"#hashrouter\">#</a> HashRouter</h3>\n<p>这一种看起来不自然，但是实现更简单。 <code>只有一个路径 /，通过 URL 后面的 # 部分来决定路由</code> ，/#/ 对应 Home 页，/#/about 对应 About 页。因为 URL 中 #之后的部分是不会发送给服务器的，所以， <code>无论哪个 URL，最后都是访问服务器的 / 路径，服务器也只需要返回同样一份 HTML</code>  就可以， <code>然后由浏览器端解析 # 后的部分，完成浏览器端渲染</code> 。HashRouter 支持这种 URL。<br>\n1.<strong> 基于 hash 模式</strong>：页面跳转原理是使用了 location.hash、location.replace；和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cHMlM0ElMkYlMkZzby5jc2RuLm5ldCUyRnNvJTJGc2VhcmNoJTNGZnJvbSUzRHBjX2Jsb2dfaGlnaGxpZ2h0JTI2cSUzRHZ1ZQ==\"> vue</span> router 的 hash 模式实现一致<br>\n 2.<strong> 比较丑</strong>：在域名后，先拼接 /#，再拼接路径；也就是利用锚点，实现路由的跳转；如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cCUzQSUyRiUyRnd3dy5hYmMuY29tJTJGJTIzJTJGeHg=\">www.abc.com/#/xx</span></p>\n<h3 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景</h3>\n<p><strong>HashRouter</strong></p>\n<p><strong>项目部署在内网</strong>：如 To B 的项目、本公司业务人员用的项目等等</p>\n<p><strong>BrowserRouter</strong></p>\n<p><strong>项目部署在公网</strong>：如 To C 的项目、面向大众的项目，url 路径美观点当然更好，但后端需要做处理</p>\n<h2 id=\"路由route\"><a class=\"markdownIt-Anchor\" href=\"#路由route\">#</a> 路由 Route</h2>\n<p>Route 用来定义一个访问路径与 React 组件之间的关系。比如说，如果你希望用户访问  <code>https://your_site.com/about</code>  的时候加载  <code>&lt;About /&gt;</code>  这个 React 页面，那么你就需要用 Route:</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">Route</span> path=<span class=\"string\">&quot;/about&quot;</span> index element=&#123;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">About</span> /&gt;</span></span>&#125; /&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"routes\"><a class=\"markdownIt-Anchor\" href=\"#routes\">#</a> Routes</h3>\n<p>Routes 是用来包住路由访问路径 (Route) 的。它决定用户在浏览器中输入的路径到对应加载什么 React 组件，因此绝大多数情况下，Routes 的唯一作用是用来包住一系列的  <code>Route</code> ，比如如下</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">Routes</span>&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;about&quot;</span> <span class=\"attr\">index</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">About</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;:id?&quot;</span>  <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125;/&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/<span class=\"title class_\">Routes</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"api\"><a class=\"markdownIt-Anchor\" href=\"#api\">#</a> API</h3>\n<h4 id=\"path\"><a class=\"markdownIt-Anchor\" href=\"#path\">#</a>  <code>path</code></h4>\n<p>当 URL 路径与 path 匹配时对应组件将被挂载</p>\n<p>默认采用<strong>模糊匹配</strong>，也就是只要包含该路径则挂载</p>\n<p>如：path=&quot;/home/about&quot;</p>\n<p>则 /home 下的组件 <code>&lt;Home&gt;</code>  也将被挂载和他的子路由 about 也会被挂载</p>\n<p>当前，前提是他们不能是同级路由，同级路由同一时间只会挂载一个</p>\n<p><strong>动态区段</strong></p>\n<p>如果路径段以 <code>:</code>  开头，则会成为动态段</p>\n<p>如：path=&quot;/home/:id&quot;</p>\n<p>/home/123 或者 /home/234 都会匹配该路径，后面一段路径是动态的</p>\n<p>但 /home 则不会匹配</p>\n<p>你也可以在路由路径中包含多个动态路段</p>\n<p>如：path=&quot;/home/:id/c/:a&quot;</p>\n<p><strong>可选段</strong></p>\n<p>在路径端末尾添加 <code>?</code>  则表示可选段</p>\n<p>如:path=&quot;/home/id?&quot;</p>\n<p>或者使用可选的动态段 path=&quot;/home/:id?&quot;</p>\n<p><strong>星形段</strong></p>\n<p>以 <code>*</code>  结尾的路径段，他将匹配后面任何字符，一般使用 * 来配置 404 页面</p>\n<p><strong>布局路由</strong></p>\n<p>省略 path 会使得此路由成为布局路由，他参加 UI 嵌套，但不提供任何路径</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">Route</span></span><br><span class=\"line\">  element=&#123;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Layout<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Outlet</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">h2</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/about&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">h2</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">Route</span>&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"index\"><a class=\"markdownIt-Anchor\" href=\"#index\">#</a>  <code>index</code></h4>\n<p>默认子路由，默认在父路由路径中渲染</p>\n<h4 id=\"element\"><a class=\"markdownIt-Anchor\" href=\"#element\">#</a>  <code>element</code></h4>\n<p>路径对应时采用渲染的 React 组件</p>\n<h3 id=\"嵌套路由\"><a class=\"markdownIt-Anchor\" href=\"#嵌套路由\">#</a> 嵌套路由</h3>\n<p>修改 App.js</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Routes</span>,<span class=\"title class_\">Route</span>,<span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-router-dom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Home&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">About</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./About&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home/1&quot;</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home/about&quot;</span>&gt;</span>about<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/home&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;:id&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;about&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">About</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n<p>当访问 /home/123 时，组件树为</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">App</span>&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Home</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Home</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Home</span>&gt;</span></span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">App</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>当访问 /home/about 时，组件树为</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">App</span>&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Home</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">About</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Home</span>&gt;</span></span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">App</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>如果你还想给二级路由再嵌套子路由，需要在后面加上其路径后面加上 <code>/*</code></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">Routes</span>&gt;</span><br><span class=\"line\">     <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;/home&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;:id&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Home</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;about/*&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">About</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">     <span class=\"tag\">&lt;/<span class=\"name\">Route</span>&gt;</span></span></span><br><span class=\"line\">   &lt;/<span class=\"title class_\">Routes</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由跳转\"><a class=\"markdownIt-Anchor\" href=\"#路由跳转\">#</a> 路由跳转</h2>\n<h3 id=\"link\"><a class=\"markdownIt-Anchor\" href=\"#link\">#</a> Link</h3>\n<p>通过使用  <code>JSX</code>  元素，如  <code>&lt;Link /&gt;</code> 、 <code>&lt;NavLink /&gt;</code>  等，设置  <code>to</code>  属性，点击该元素来进行跳转的方式</p>\n<p>在页面表现效果为一个 a 链接标签，但和 a 标签不一样</p>\n<p>使用锚点元素实现，在每次点击时，页面被重新加载，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1SZWFjdCZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjcwMjA=\">React</span> Router 提供了 <code>&lt;Link&gt;</code>  组件用来避免这种状况发生。当 你点击 <code>&lt;Link&gt;</code>  时，url 会更新，组件会被重新渲染，但是页面不会重新加载</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Home.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Link</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Home</span> = (<span class=\"params\"></span>)=&gt;&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/about&quot;</span>&gt;</span>about<span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Home</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"api-2\"><a class=\"markdownIt-Anchor\" href=\"#api-2\">#</a> API</h4>\n<p><strong>to</strong>：要跳转到的路径，可以通过  <code>../</code>  的方式跳转到上层组件 / 路径</p>\n<p><strong>relative</strong>：默认情况下，链接相对于 router 层次结构，也就是说当你通过…/ 的方式跳转是跳转上层路由，</p>\n<p>​\t但有时候你希望是跳转上层路径，也就是基于 path 层次结构，需要给 relative 设置为’path’</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Contact and EditContact do not share additional UI layout</span></span><br><span class=\"line\">&lt;<span class=\"title class_\">Route</span> path=<span class=\"string\">&quot;/&quot;</span> element=&#123;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Layout</span> /&gt;</span></span>&#125;&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span> <span class=\"attr\">path</span>=<span class=\"string\">&quot;contacts/:id&quot;</span> <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">Contact</span> /&gt;</span>&#125; /&gt;</span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Route</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    <span class=\"attr\">path</span>=<span class=\"string\">&quot;contacts/:id/edit&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    <span class=\"attr\">element</span>=<span class=\"string\">&#123;</span>&lt;<span class=\"attr\">EditContact</span> /&gt;</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">  /&gt;</span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">Route</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">EditContact</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 点击会跳转到contacts/:id</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果不设置relative则会跳转到上一级路由也就是/</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;..&quot;</span> <span class=\"attr\">relative</span>=<span class=\"string\">&quot;path&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      Cancel</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>preventScrollReset</code> : 跳转时窗口是否将滚动位置重置为窗口</p>\n<p><code>replace</code> ：是否直接替换历史堆栈中的当前路由</p>\n<p><code>state</code> ：为历史记录中的新位置设置状态值，然后可以通过 useLocation () 访问</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">Link</span> to=<span class=\"string\">&quot;new-path&quot;</span> state=&#123;&#123; <span class=\"attr\">some</span>: <span class=\"string\">&quot;value&quot;</span> &#125;&#125; /&gt;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; state &#125; = <span class=\"title function_\">useLocation</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"navlink\"><a class=\"markdownIt-Anchor\" href=\"#navlink\">#</a> NavLink</h3>\n<p>是一种特殊的  <code>&lt;Link /&gt;</code> ，用来判断当前路由是 “活跃的” 还是 “待定的”。</p>\n<p>活跃状态则是路径匹配的时候</p>\n<p>默认情况下，当组件处于活动状态时，会将类添加到组件中，以便您可以使用 CSS 设置其样式</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nav id=<span class=\"string\">&quot;sidebar&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">NavLink</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/messages&quot;</span> /&gt;</span></span></span><br><span class=\"line\">&lt;/nav&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sidebar</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>className</code> :</p>\n<p>类似于普通的类名，但您也可以向它传递一个函数，以根据链接的活动和挂起状态自定义应用的类名。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">NavLink</span></span><br><span class=\"line\">  to=<span class=\"string\">&quot;/messages&quot;</span></span><br><span class=\"line\">  className=&#123;<span class=\"function\">(<span class=\"params\">&#123; isActive, isPending &#125;</span>) =&gt;</span></span><br><span class=\"line\">    isPending ? <span class=\"string\">&quot;pending&quot;</span> : isActive ? <span class=\"string\">&quot;active&quot;</span> : <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  <span class=\"title class_\">Messages</span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">NavLink</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>不光是 className，style 和内部也可以传递该函数</p>\n<p><code>end</code> :</p>\n<p>将 active 和 pending 状态的匹配逻辑更改为仅与 NavLink 路径的 “结束” 匹配。</p>\n<p>如果原本路径是 /home，则 /home/1 也会视为活跃</p>\n<p>但有了 end 之后则不会，只有路径完全匹配才会视为</p>\n<h3 id=\"usenavigate\"><a class=\"markdownIt-Anchor\" href=\"#usenavigate\">#</a> useNavigate()</h3>\n<p><code>useNavigate</code>  钩子返回一个函数，让您可以以编程方式导航</p>\n<p><code>navigate</code>  函数有两个签名：</p>\n<ul>\n<li>要么传递一个  <code>To</code>  值（与  <code>&lt;Link to&gt;</code>  相同的类型），带有可选的第二个  <code>&#123; replace, state &#125;</code>  参数，要么</li>\n<li>传递您想要在历史堆栈中前进的增量。例如，  <code>navigate(-1)</code>  等同于点击后退按钮。</li>\n</ul>\n<p>使用</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> navigate = <span class=\"title function_\">useNavigate</span>();</span><br><span class=\"line\"><span class=\"title function_\">navigate</span>(<span class=\"string\">&quot;/home&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"出口outlet\"><a class=\"markdownIt-Anchor\" href=\"#出口outlet\">#</a> 出口 Outlet</h2>\n<p>展示子路由的组件</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Dashboard</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;h1&gt;Dashboard&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#123;/*  如果url匹配</span><br><span class=\"line\">          &quot;/messages&quot;将会渲染&lt;DashboardMessages&gt;, 如果匹配上/tasks &lt;DashboardTasks&gt;, 如果是/则是什么都没有</span><br><span class=\"line\">      */&#125;</span><br><span class=\"line\">      &lt;Outlet /&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function App() &#123;</span><br><span class=\"line\">  return (</span><br><span class=\"line\">    &lt;Routes&gt;</span><br><span class=\"line\">      &lt;Route path=&quot;/&quot; element=&#123;&lt;Dashboard /&gt;&#125;&gt;</span><br><span class=\"line\">        &lt;Route</span><br><span class=\"line\">          path=&quot;messages&quot;</span><br><span class=\"line\">          element=&#123;&lt;DashboardMessages /&gt;&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">        &lt;Route path=&quot;tasks&quot; element=&#123;&lt;DashboardTasks /&gt;&#125; /&gt;</span><br><span class=\"line\">      &lt;/Route&gt;</span><br><span class=\"line\">    &lt;/Routes&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取url携带参数\"><a class=\"markdownIt-Anchor\" href=\"#获取url携带参数\">#</a> 获取 url 携带参数</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">searchParams -</span><br><span class=\"line\">\t传参 -</span><br><span class=\"line\">\t<span class=\"title function_\">navigage</span>(<span class=\"string\">&#x27;/about?id=0001&#x27;</span>)</span><br><span class=\"line\">\t取参 - </span><br><span class=\"line\">\t<span class=\"keyword\">let</span> [params] = <span class=\"title function_\">useSearchParams</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> id = params.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;id&#x27;</span>)</span><br><span class=\"line\">params - </span><br><span class=\"line\">\t传参 - </span><br><span class=\"line\">\t<span class=\"title function_\">navigage</span>(<span class=\"string\">&#x27;/about/0001&#x27;</span>)</span><br><span class=\"line\">\t取参 - </span><br><span class=\"line\">\t<span class=\"keyword\">let</span> params = <span class=\"title function_\">useParams</span>()</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> id = params.<span class=\"property\">id</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"路由懒加载\"><a class=\"markdownIt-Anchor\" href=\"#路由懒加载\">#</a> 路由懒加载</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">Suspense</span>,lazy&#125; <span class=\"keyword\">from</span> ...</span><br><span class=\"line\"><span class=\"keyword\">const</span> login = <span class=\"title function_\">lazy</span>(<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span> <span class=\"string\">&#x27;./pages/login&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"title class_\">Suspense</span> fallback=&#123;<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Loading...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>&#125; &gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Routes</span>&gt;</span></span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">Suspense</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>fallback 里面是加载时显示</p>\n",
            "tags": []
        }
    ]
}