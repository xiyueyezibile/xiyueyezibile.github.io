<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>汐月也自闭了的个人博客 • Posts by &#34;c语言&#34; category</title>
        <link>http://example.com</link>
        <description>这个需求写不了</description>
        <language>zh-CN</language>
        <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
        <lastBuildDate>Fri, 26 May 2023 18:07:29 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/26/%E6%B5%AE%E7%82%B9%E5%9E%8B%E5%AD%98%E5%82%A8%E8%A7%84%E5%88%99/</guid>
            <title>浮点型存储规则</title>
            <link>http://example.com/2023/05/26/%E6%B5%AE%E7%82%B9%E5%9E%8B%E5%AD%98%E5%82%A8%E8%A7%84%E5%88%99/</link>
            <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;(-1)^S * M * 2^E&lt;/p&gt;
&lt;p&gt;(-1)^S 表示符号位，S 为 0 为正，S 为 1 为负&lt;/p&gt;
&lt;p&gt;M 表示有效数组，大于等于 1，小于 2&lt;/p&gt;
&lt;p&gt;2^E 表示指数为&lt;/p&gt;
&lt;p&gt;十进制转 2 进制&lt;/p&gt;
&lt;p&gt;(5.5)10 = (101.1)2 = (1.011 * 2^2)2 = (-1)^0 * 1.011 * 2^2&lt;/p&gt;
&lt;p&gt;S=0&lt;/p&gt;
&lt;p&gt;M=1.011&lt;/p&gt;
&lt;p&gt;E=2&lt;/p&gt;
&lt;h2 id=&#34;对于32位的浮点数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对于32位的浮点数&#34;&gt;#&lt;/a&gt; 对于 32 位的浮点数&lt;/h2&gt;
&lt;p&gt;最高一位是 S&lt;/p&gt;
&lt;p&gt;8bit 存 E&lt;/p&gt;
&lt;p&gt;23bit 存 M&lt;/p&gt;
&lt;h2 id=&#34;对于64位浮点数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对于64位浮点数&#34;&gt;#&lt;/a&gt; 对于 64 位浮点数&lt;/h2&gt;
&lt;p&gt;最高一位 S&lt;/p&gt;
&lt;p&gt;11bit 存 E&lt;/p&gt;
&lt;p&gt;52bit 存 M&lt;/p&gt;
&lt;h2 id=&#34;-&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#-&#34;&gt;#&lt;/a&gt; --------------------------------------&lt;/h2&gt;
&lt;p&gt;M 开头的数总是 1，可以舍去，不保存&lt;/p&gt;
&lt;h2 id=&#34;指数e的存储&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指数e的存储&#34;&gt;#&lt;/a&gt; 指数 E 的存储&lt;/h2&gt;
&lt;p&gt;E 是一个无符号整数（unsigned int）&lt;/p&gt;
&lt;p&gt;但 E 可能是负数，所以规定 E 的真实值必须加上一个中间数&lt;/p&gt;
&lt;p&gt;对于 8 位，这个数是 127，对于 11 位，这个数是 1023&lt;/p&gt;
&lt;h2 id=&#34;指数e的取出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指数e的取出&#34;&gt;#&lt;/a&gt; 指数 E 的取出&lt;/h2&gt;
&lt;h3 id=&#34;e不全为0或不全为1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#e不全为0或不全为1&#34;&gt;#&lt;/a&gt; E 不全为 0 或不全为 1&lt;/h3&gt;
&lt;p&gt;指数 E - 中间值 = 真实值&lt;/p&gt;
&lt;p&gt;M 加上第一位的 1&lt;/p&gt;
&lt;h3 id=&#34;e全为0&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#e全为0&#34;&gt;#&lt;/a&gt; E 全为 0&lt;/h3&gt;
&lt;p&gt;E = 1 - 中间值 = 真实值&lt;/p&gt;
&lt;p&gt;M 不再加 1，还原为 0.xxxxx, 这样做是为了表示 ±0 或接近 0 的很小的数字&lt;/p&gt;
&lt;h3 id=&#34;e全为1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#e全为1&#34;&gt;#&lt;/a&gt; E 全为 1&lt;/h3&gt;
&lt;p&gt;这时，如果 M 全为 0，表示正负无穷大&lt;/p&gt;
&lt;h2 id=&#34;例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例&#34;&gt;#&lt;/a&gt; 例&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int n = 9;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	float* pFloat = (float*)&amp;amp;n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%d\n&amp;quot;,n);//9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%f\n&amp;quot;,*Float);//0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	*pFloat = 9.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%d\n&amp;quot;,n);//一个很大的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	printf(&amp;quot;%f\n&amp;quot;,*pFloat);//9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	浮点型和整型存储规则不一样，所以存储的二进制不一样&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/26/memcpy%E4%B8%8Ememmove/</guid>
            <title>memcpy与memmove</title>
            <link>http://example.com/2023/05/26/memcpy%E4%B8%8Ememmove/</link>
            <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;memcpy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#memcpy&#34;&gt;#&lt;/a&gt; memcpy&lt;/h2&gt;
&lt;p&gt;memcpy 复制内存块&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void* memcpy(void* des,const void* src,size_t num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//把num个字节从src复制到des,返回指向des首地址的void指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注：des 与 src不应重叠并且至少有num个字节大小&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;my_memcpy&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#my_memcpy&#34;&gt;#&lt;/a&gt; my_memcpy&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;void* my_memcpy(void* des,const void* src, size_t num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(des &amp;amp;&amp;amp; src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	void* ret = des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while (num--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//一个字节一个字节的复制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		*(char*)des = *(char*)src;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		des = (char*)des + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		src = (char*)src + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;memmove&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#memmove&#34;&gt;#&lt;/a&gt; memmove&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;sring.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void *memmove(void* des,const void * src,size_t num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//把num个字节从src复制到des,返回指向des首地址的void指针,src与des可以出现重叠&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;my_memmove&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#my_memmove&#34;&gt;#&lt;/a&gt; my_memmove&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//memmove较与memcpy的一个区别就是des和src允许重合&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//如果有重合的部分，我们需要保证src改变之前就被复制到des里面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;void* my_memmove(void* des,const void* src, size_t num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	assert(des &amp;amp;&amp;amp; src);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	void* ret = des;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	while (num--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (src &amp;gt; des)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//当src的地址&amp;gt;des的地址时，des的改变并不会影响src&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			*(char*)des = *(char*)src;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			src = (char*)src + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			des = (char*)des + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//当src的地址&amp;lt;=des的地址时,如果直接顺序复制可能会改变src&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		//如果是逆序则不会改变&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			*((char*)des + num) = *((char*)src + num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/26/C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F/</guid>
            <title>C语言结构体类型所占空间的大小</title>
            <link>http://example.com/2023/05/26/C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E6%89%80%E5%8D%A0%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F/</link>
            <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
            <description><![CDATA[ &lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Node&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;long&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;short&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;short&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;c语言结构体内存对齐规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c语言结构体内存对齐规则&#34;&gt;#&lt;/a&gt; C 语言结构体内存对齐规则：&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;对齐数 = 编译器默认的一个对齐数 与 该成员大小的较小值&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一个成员在与结构体变量偏移量为 0 的地址处。&lt;/li&gt;
&lt;li&gt;其他成员变量要对齐到某个数字（对齐数）的整数倍的地址处。&lt;/li&gt;
&lt;li&gt;结构体总大小为最大对齐数（每个成员变量都有一个对齐数）的整数倍。&lt;/li&gt;
&lt;li&gt;如果嵌套了结构体的情况，嵌套的结构体&lt;strong&gt;对齐到自己的最大对齐数的整数倍&lt;/strong&gt;处，结构体的整体大小就是&lt;strong&gt;所有最大对齐数（含嵌套结构体的对齐数）的整数倍。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//第一个成员在与结构体变量偏移量为0的地址处。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 char a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//其他成员变量要对齐到某个数字（对齐数8）的整数倍的地址处。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15 long long b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//其他成员变量要对齐到某个数字（对齐数4）的整数倍的地址处。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16 short s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17 short s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18 short s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19 short s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//其他成员变量要对齐到某个数字（对齐数4）的整数倍的地址处。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20 short c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21 short c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22 short c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23 short c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//结构体总大小为最大对齐数8（每个成员变量都有一个对齐数）的整数倍。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;位域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#位域&#34;&gt;#&lt;/a&gt; 位域&lt;/h2&gt;
&lt;p&gt;位域不同于一般的结构体成员，它以位为单位来定义成员的长度，因此在结构体中定义位域时，必须要指明位域成员所需要占用的二进制位数。&lt;/p&gt;
&lt;p&gt;位域变量仅限整型或者 char 类型&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;node&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a:&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​	如果相邻位域字段的类型相同，且其位宽之和小于类型的 sizeof 大小，则后面的字段将紧邻前一个字段存储，直到不能容纳为止；&lt;br&gt;
​	如果相邻位域字段的类型相同，但其位宽之和大于类型的 sizeof 大小，则后面的字段将从新的存储单元开始，其偏移量为其类型大小的整数倍；&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/26/%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%B8%8E%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88/</guid>
            <title>指针数组与数组指针</title>
            <link>http://example.com/2023/05/26/%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%B8%8E%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88/</link>
            <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;含义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#含义&#34;&gt;#&lt;/a&gt; 含义&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;指针数组&lt;/strong&gt;：指针数组可以说成是” 指针的数组”，首先这个变量是一个数组，其次，” 指针” 修饰这个数组，意思是说这个数组的所有元素都是指针类型，在 32 位系统中，指针占四个字节。&lt;br&gt;
&lt;strong&gt;数组指针&lt;/strong&gt;：数组指针可以说成是” 数组的指针”，首先这个变量是一个指针，其次，” 数组” 修饰这个指针，意思是说这个指针存放着一个数组的首地址，或者说这个指针指向一个数组的首地址。&lt;/p&gt;
&lt;h2 id=&#34;指针数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指针数组&#34;&gt;#&lt;/a&gt; 指针数组&lt;/h2&gt;
&lt;p&gt;例：*&lt;em&gt;int &lt;em&gt;p[4]&lt;/em&gt;&lt;/em&gt; ,[] 优先级高于解引用操作符，所以 p 先与 [] 结合成数组，数组里面的每个元素都是一个指针，总计有 4 个指针，在 32 位系统中指针大小是 4 个字节，所以该指针数组的大小为 16 个字节，从 p [0] 到 p [1] 会跳过 4 个字节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数组指针不能代表二维数组&lt;/strong&gt;，因为二维数组的每一行是固定长度的，而指针数组的每一行长度不固定，而且所占内存空间也可能不相同，并且二维数组的地址是连续的，而指针数组里面存放 4 个不相关的指针则不一定连续。&lt;/p&gt;
&lt;h2 id=&#34;数组指针&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组指针&#34;&gt;#&lt;/a&gt; 数组指针&lt;/h2&gt;
&lt;p&gt;例：&lt;em&gt;&lt;em&gt;int (&lt;em&gt;p)[4]&lt;/em&gt;&lt;/em&gt; , 数组指针本质是一个指针，指向了一个一维数组，指针指向的数据类型是 int [4]，方便理解我们可以看成 int [4] *p，指针做加减法运算的时候回前进（后退）指向的数据类型大小个字节，int [4] = 4 * 4 = 16，所以 p + 1 会前进（后退）16 个字节，这正好可以表示一个列数为 4 的整型二维数组的一行，故&lt;/em&gt;&lt;em&gt;数组指针可以用来保存二维数组的地址&lt;/em&gt; *。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21lbl93ZW4vYXJ0aWNsZS9kZXRhaWxzLzUyNjk0MDY5&#34;&gt;csdn&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpcmVuZGFkYS9hcnRpY2xlL2RldGFpbHMvMTIyOTMxOTg3&#34;&gt;csdn&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2023/05/26/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
            <title>数据类型转换</title>
            <link>http://example.com/2023/05/26/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
            <pubDate>Fri, 26 May 2023 18:07:29 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;自动类型转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自动类型转换&#34;&gt;#&lt;/a&gt; 自动类型转换&lt;/h2&gt;
&lt;p&gt;自动类型转换按照&lt;strong&gt;数据长度增加&lt;/strong&gt;的方向进行，以保证数值不失真或精度不降低.&lt;/p&gt;
&lt;h2 id=&#34;强制类型转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#强制类型转换&#34;&gt;#&lt;/a&gt; 强制类型转换&lt;/h2&gt;
&lt;p&gt;程序员指明的一种类型转换&lt;/p&gt;
&lt;h2 id=&#34;特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特性&#34;&gt;#&lt;/a&gt; 特性&lt;/h2&gt;
&lt;p&gt;类型转换只是临时的，都是为了本次运算进行的临时性转换&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
