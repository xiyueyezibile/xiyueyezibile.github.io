<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>汐月也自闭了的个人博客 • Posts by &#34;c++&#34; category</title>
        <link>http://example.com</link>
        <description>这个需求写不了</description>
        <language>zh-CN</language>
        <pubDate>Fri, 21 Jul 2023 22:52:20 +0800</pubDate>
        <lastBuildDate>Fri, 21 Jul 2023 22:52:20 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/2023/07/21/C++/c++%E5%85%A5%E9%97%A8/</guid>
            <title>c++入门</title>
            <link>http://example.com/2023/07/21/C++/c++%E5%85%A5%E9%97%A8/</link>
            <pubDate>Fri, 21 Jul 2023 22:52:20 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;cc的作用领域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cc的作用领域&#34;&gt;#&lt;/a&gt; C/c++ 的作用领域&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;操作系统以及大型系统软件开发&lt;/li&gt;
&lt;li&gt;服务器端开发&lt;/li&gt;
&lt;li&gt;游戏开发&lt;/li&gt;
&lt;li&gt;嵌入式和物联网领域&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;第一个c程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一个c程序&#34;&gt;#&lt;/a&gt; 第一个 c++ 程序&lt;/h2&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;using namespace std&lt;/code&gt;  是命名空间&lt;/p&gt;
&lt;h2 id=&#34;命名空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命名空间&#34;&gt;#&lt;/a&gt; 命名空间&lt;/h2&gt;
&lt;h3 id=&#34;为什么要有命名空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为什么要有命名空间&#34;&gt;#&lt;/a&gt; 为什么要有命名空间？&lt;/h3&gt;
&lt;p&gt;我们来看看 c 语言&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rand = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,rand);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样程序是可以正常执行的，但是我们加上一个头文件&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rand = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,rand);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序就会报错，因为 rand 这个变量和头文件 &lt;code&gt;stdlib.h&lt;/code&gt;  里面的变量命名冲突了&lt;/p&gt;
&lt;p&gt;所以在 c 语言中，是存在命名冲突的问题的&lt;/p&gt;
&lt;p&gt;c++ 命名空间就是解决&lt;strong&gt;命名冲突&lt;/strong&gt;这个问题的&lt;/p&gt;
&lt;h3 id=&#34;语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; acm &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; rand = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; left, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; right)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; left + right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 如何访问命名空间的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;通过 acm::rand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ::叫做域作用限定符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认是在全局查找，不会进入命名空间查找&lt;/p&gt;
&lt;p&gt;&lt;code&gt;using namespace acm&lt;/code&gt;  会把命名空间全部展开&lt;/p&gt;
&lt;p&gt;展开之后就可以进入里面查找，但这个操作是危险的&lt;/p&gt;
&lt;p&gt;我们可以只展开一部分&lt;/p&gt;
&lt;p&gt;&lt;code&gt;using acm::Add&lt;/code&gt;  只展开了 Add 函数&lt;/p&gt;
&lt;p&gt;注：同名的命名空间会进行合并，不用担心命名空间名冲突&lt;/p&gt;
&lt;h3 id=&#34;std&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#std&#34;&gt;#&lt;/a&gt; std&lt;/h3&gt;
&lt;p&gt;std 是 c++ 标准库的命名空间&lt;/p&gt;
&lt;p&gt;头文件 &lt;code&gt;iostream&lt;/code&gt;  里面的 &lt;code&gt;cout&lt;/code&gt; , &lt;code&gt;endl&lt;/code&gt;  等都封装在 std 这个命名空间里面&lt;/p&gt;
&lt;h2 id=&#34;基础语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础语法&#34;&gt;#&lt;/a&gt; 基础语法&lt;/h2&gt;
&lt;h3 id=&#34;coutendl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#coutendl&#34;&gt;#&lt;/a&gt;  &lt;code&gt;cout&lt;/code&gt; , &lt;code&gt;endl&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cout&lt;/code&gt;  控制台打印，会自动识别类型&lt;/p&gt;
&lt;p&gt;&lt;code&gt;endl&lt;/code&gt;  可以相当于 \n&lt;/p&gt;
&lt;h3 id=&#34;cin-输入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cin-输入&#34;&gt;#&lt;/a&gt;  &lt;code&gt;cin&lt;/code&gt;  输入&lt;/h3&gt;
&lt;p&gt;cin 可以自动识别类型&lt;/p&gt;
&lt;h3 id=&#34;流插入运算符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流插入运算符&#34;&gt;#&lt;/a&gt; &amp;lt;&amp;lt; 流插入运算符&lt;/h3&gt;
&lt;h3 id=&#34;流提取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流提取&#34;&gt;#&lt;/a&gt;  &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  流提取&lt;/h3&gt;
&lt;h2 id=&#34;缺省参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缺省参数&#34;&gt;#&lt;/a&gt; 缺省参数&lt;/h2&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;int a = 1&lt;/code&gt;  就是缺省参数&lt;/p&gt;
&lt;p&gt;如果你不传参数，a 就会等于缺省值，这里是 1&lt;/p&gt;
&lt;p&gt;如果你传了参数，a 就会等于传的值&lt;/p&gt;
&lt;p&gt;缺省又分为全缺省和半缺省&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全缺省&lt;/strong&gt;就是全部都是缺省参数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;半缺省&lt;/strong&gt;有缺省参数也有普通参数，半缺省必须从右往左给缺省值&lt;/p&gt;
&lt;p&gt;注：声明和定义不能同时给缺省参数&lt;/p&gt;
&lt;h2 id=&#34;函数重载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数重载&#34;&gt;#&lt;/a&gt; 函数重载&lt;/h2&gt;
&lt;h3 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h3&gt;
&lt;p&gt;c++ 允许在&lt;strong&gt;同一作用域&lt;/strong&gt;下声明多个&lt;strong&gt;相同名字的函数&lt;/strong&gt;，但这些函数的&lt;strong&gt;形参列表不同&lt;/strong&gt;（个数，类型或顺序不同）&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1,2类型不同 // 1,3个数不同 //3,4顺序不同，跟名字无关，看的是类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; add)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; add;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; add)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; add;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; left, &lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; right)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; left + (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; left, &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; right)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;)left + right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回值不同不能构成重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;为什么c支持函数重载而c语言不支持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为什么c支持函数重载而c语言不支持&#34;&gt;#&lt;/a&gt; 为什么 c++ 支持函数重载而 c 语言不支持？&lt;/h3&gt;
&lt;p&gt;过程&lt;/p&gt;
&lt;p&gt;test.cpp&lt;/p&gt;
&lt;p&gt;预处理：头文件展开 / 宏替换 / 去掉注释 / 条件编译&lt;/p&gt;
&lt;p&gt;test.i&lt;/p&gt;
&lt;p&gt;编译：检查语法，生成汇编代码&lt;/p&gt;
&lt;p&gt;test.s&lt;/p&gt;
&lt;p&gt;汇编：将汇编代码生产二进制机器码&lt;/p&gt;
&lt;p&gt;test.o&lt;/p&gt;
&lt;p&gt;链接：合并链接，生成可执行程序&lt;/p&gt;
&lt;p&gt;c 语言是直接用函数名字充当符号表里面的名字&lt;/p&gt;
&lt;p&gt;c++ 则有一套函数名修饰规则，会把类型带进去&lt;/p&gt;
&lt;p&gt;所以函数重载类型不同，个数不同，位置不同，c++ 就可以区分&lt;/p&gt;
&lt;h3 id=&#34;函数重载和缺省参数一起会导致一个问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数重载和缺省参数一起会导致一个问题&#34;&gt;#&lt;/a&gt; 函数重载和缺省参数一起会导致一个问题&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a,&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 上面两个函数构成重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;func&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 这样没问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;func&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 这样就存在歧义了，不知道调哪个函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;c关键字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c关键字&#34;&gt;#&lt;/a&gt; c++ 关键字&lt;/h2&gt;
&lt;p&gt;c++ 总计 63 个关键字，c 语言 32 个关键字&lt;/p&gt;
&lt;h2 id=&#34;引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引用&#34;&gt;#&lt;/a&gt; 引用&lt;/h2&gt;
&lt;p&gt;引用不会新定义一个变量，而是给已存在的变量取一个别名，编译器不会为引用变量开辟内存空间，它和它引用的变量公用一片内存空间。&lt;/p&gt;
&lt;h3 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;&amp;amp; b = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout &amp;lt;&amp;lt; &amp;amp;a &amp;lt;&amp;lt; &amp;amp;b &amp;lt;&amp;lt; endl;&lt;span class=&#34;comment&#34;&gt;// 输出结果一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b++; &lt;span class=&#34;comment&#34;&gt;// a也会++&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特性&#34;&gt;#&lt;/a&gt; 特性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;引用在定义时必须初始化。&lt;/li&gt;
&lt;li&gt;一个变量可以有多个引用。&lt;/li&gt;
&lt;li&gt;引用一旦引用一个实体，不能再引用其他实体（不能再变）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限&#34;&gt;#&lt;/a&gt; 权限&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;权限可以缩小&lt;/li&gt;
&lt;li&gt;权限可以平移&lt;/li&gt;
&lt;li&gt;权限不能放大&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &amp;amp;b = a; &lt;span class=&#34;comment&#34;&gt;// 权限的放大，不行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &amp;amp;c = a;&lt;span class=&#34;comment&#34;&gt;// 权限的平移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y = x;&lt;span class=&#34;comment&#34;&gt;// 权限的缩小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; &amp;amp;v = x;&lt;span class=&#34;comment&#34;&gt;// 类型转换时会产生临时对象，临时对象具有常性，不能用double &amp;amp;v接收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;引用和指针的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引用和指针的区别&#34;&gt;#&lt;/a&gt; 引用和指针的区别&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; *p = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &amp;amp;ref = a;&lt;span class=&#34;comment&#34;&gt;// 语法上引用不开空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但在底层引用是要开空间的，引用是按照指针方式实现的&lt;/p&gt;
&lt;p&gt;区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;引用概念上定义一个变量的别名，指针存储一个变量地址&lt;/li&gt;
&lt;li&gt;引用在定义时必须初始化，指针没有要求&lt;/li&gt;
&lt;li&gt;引用在初始化引用一个实体后，不能再引用其他实体，而指针可以指向任何一个同类型实体&lt;/li&gt;
&lt;li&gt;没有 NULL 引用，但有 NULL 指针&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;sizeof&lt;/code&gt;  中含义不同，引用结果为引用类型大小，但指针始终是地址空间所占字节个数&lt;/li&gt;
&lt;li&gt;引用自加即引用的实体增加 1，指针自家即指针向后偏移一个类型大小&lt;/li&gt;
&lt;li&gt;有多级指针，但没有多级引用&lt;/li&gt;
&lt;li&gt;访问实体的方式不同&lt;/li&gt;
&lt;li&gt;引用比指针使用起来跟安全&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;内联函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内联函数&#34;&gt;#&lt;/a&gt; 内联函数&lt;/h2&gt;
&lt;h3 id=&#34;宏的缺点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#宏的缺点&#34;&gt;#&lt;/a&gt; 宏的缺点&lt;/h3&gt;
&lt;p&gt;宏分为宏常量和宏函数&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; N 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 实现一个ADD的宏函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; ADD(x,y) ((x) + (y))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看见要加很多括号，因为宏本质是一种替换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;没有类型的严格限制&lt;/li&gt;
&lt;li&gt;针对频繁调用的小函数，不需要建立栈帧，提高了效率&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;容易出错，语法坑很多&lt;/li&gt;
&lt;li&gt;并且不能调试&lt;/li&gt;
&lt;li&gt;没有类型安全的检查&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;概念-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念-2&#34;&gt;#&lt;/a&gt; 概念&lt;/h3&gt;
&lt;p&gt;以 &lt;code&gt;inline&lt;/code&gt;  修饰的函数叫做内联函数&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 内联函数会在调用时展开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x,&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比宏的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内联也不会建立栈帧&lt;/li&gt;
&lt;li&gt;可以进行调试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：内联函数不要声明和定义分离&lt;/p&gt;
&lt;h2 id=&#34;autoc11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#autoc11&#34;&gt;#&lt;/a&gt; auto(c++11)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;auto&lt;/code&gt;  关键字可以自动推导类型&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; b = a;&lt;span class=&#34;comment&#34;&gt;// 通过右边的值自动推导左边的值的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; c = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt;&amp;amp; d = a;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当类型很长的时候就可以简化代码。&lt;/p&gt;
&lt;h3 id=&#34;什么时候使用内联函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么时候使用内联函数&#34;&gt;#&lt;/a&gt; 什么时候使用内联函数？&lt;/h3&gt;
&lt;p&gt;一般内联机制用于规模较小，流程直接，频繁调用的函数。&lt;/p&gt;
&lt;p&gt;很多编译器也不支持内联递归函数。&lt;/p&gt;
&lt;p&gt;如果内联函数较为复杂，即使加了 &lt;code&gt;inline&lt;/code&gt; ，编译器可能也不会把他当作内联函数&lt;/p&gt;
&lt;h2 id=&#34;范围forc11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#范围forc11&#34;&gt;#&lt;/a&gt; 范围 for (c++11)&lt;/h2&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; array[] = &amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 依次取数组中的数据赋值给e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 自动迭代&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; e : array) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cout &amp;lt;&amp;lt; e &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;指针空值nullptr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指针空值nullptr&#34;&gt;#&lt;/a&gt; 指针空值 nullptr&lt;/h2&gt;
&lt;p&gt;在传统 c 中，NULL 其实是一个宏&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#define NULL 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以在 c++ 中新定义了一个空指针 &lt;code&gt;nullptr&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// #define nullptr ((void*)0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//它所占字节数与(void*)0所占字节大小相同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
