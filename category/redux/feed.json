{
    "version": "https://jsonfeed.org/version/1",
    "title": "汐月也自闭了的个人博客 • All posts by \"redux\" category",
    "description": "这个需求写不了",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/09/Redux/Redux/",
            "url": "http://example.com/2023/05/09/Redux/Redux/",
            "title": "Redux",
            "date_published": "2023-05-09T10:52:38.779Z",
            "content_html": "<h2 id=\"redux是什么\"><a class=\"markdownIt-Anchor\" href=\"#redux是什么\">#</a> Redux 是什么？</h2>\n<p>1. <code>redux</code>  是一个独立专门用于做状态管理的 JS 库 (不是 react 插件库)<br>\n 2. 它可以用在 react, angular, vue 等项目中，但基本与 react 配合使用<br>\n 3. 作用：集中式管理 react 应用中多个组件共享的状态</p>\n<p>在 <code>React</code>  中有专门 <code>React-reudx</code>  进行状态管理</p>\n<h2 id=\"需要使用到redux的情况\"><a class=\"markdownIt-Anchor\" href=\"#需要使用到redux的情况\">#</a> 需要使用到 Redux 的情况</h2>\n<ol>\n<li>总体原则：大型项目状态管理复杂才用</li>\n<li>某个组件的状态，需要共享</li>\n<li>某个状态需要在任何地方都可以拿到</li>\n<li>一个组件需要改变全局状态</li>\n<li>一个组件需要改变另一个组件的状态</li>\n</ol>\n<h2 id=\"安装redux\"><a class=\"markdownIt-Anchor\" href=\"#安装redux\">#</a> 安装 redux</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i redux</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h2>\n<p>1）首先我们要确定我们要做什么<br>\n 2）让 Action Creators 创建 <code>action</code> （也就是你要做的事情）<br>\n3）通过 <code>dispatch</code>  将 <code>action</code>  分发出去<br>\n 4） <code>store</code>  对要使用的 <code>reducer</code>  进行绑定，然后将 <code>action</code>  分发到对应的 <code>reducer</code>  上<br>\n 5）在 <code>reducer</code>  上进行相应的 <code>action</code>  操作并返回结果给 <code>store</code> <br>\n6）组件就可以通过 <code>store</code>  的 API 像 <code>store</code>  进行获取操作返回的结果</p>\n<h2 id=\"创建action\"><a class=\"markdownIt-Anchor\" href=\"#创建action\">#</a> 创建 action</h2>\n<p>actions 英文直译过来就是行动、动作的意思，那么我们就可以猜到他表示的是 “<strong>怎么做</strong>”，简单来说 actions 就是一个<strong>对象</strong>，actions 里面有两个属性分别为<strong> type</strong> 和<strong> data</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 为防止出现拼写错误，我们对行为名字进行抽离</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"variable constant_\">ADDCOUNT</span> = <span class=\"string\">&#x27;addCount&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"variable constant_\">CREATJIAN</span> = <span class=\"string\">&#x27;lessCount&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"variable constant_\">ADDCOUNT</span>, <span class=\"variable constant_\">CREATJIAN</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../redux/constant&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">creatAdd</span> = data =&gt; (&#123; <span class=\"attr\">type</span>: <span class=\"variable constant_\">ADDCOUNT</span>, data &#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">creatJian</span> = data =&gt; (&#123; <span class=\"attr\">type</span>: <span class=\"variable constant_\">CREATJIAN</span>, data &#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建reducer\"><a class=\"markdownIt-Anchor\" href=\"#创建reducer\">#</a> 创建 reducer</h2>\n<p><code>reducer</code>  用于将 <code>store</code>  发过来的 <code>action</code>  完成并将结果返回给 <code>store</code> ，他接收两个参数 <code>preState</code> （旧状态）和 <code>action</code> （动作）并返回一个 <code>newState</code> （新状态）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"variable constant_\">ADDCOUNT</span>, <span class=\"variable constant_\">CREATJIAN</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./constant&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> inin = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">countReducer</span> (pre = inin, action) &#123;</span><br><span class=\"line\">  <span class=\"comment\">///从action解析出type和data</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; type, data &#125; = action</span><br><span class=\"line\">  <span class=\"comment\">///通过类型进行匹配，判断怎么做</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">ADDCOUNT</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> pre + data</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"attr\">CREATJIAN</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> pre - data</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> pre</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建store\"><a class=\"markdownIt-Anchor\" href=\"#创建store\">#</a> 创建 store</h2>\n<p><code>store</code>  有且只能有一个，他相当于一个最高指挥家，他负责把 <code>action</code>  动作交给对应的 <code>reducer</code>  进行执行，也就是说将 state、action 和 reducer 联系在一起的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; legacy_createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;redux&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> countReducer <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./count_reducer&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">///将reducer和store联系起来</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">legacy_createStore</span>(countReducer)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>legacy_createStore</strong></p>\n<h2 id=\"发送action\"><a class=\"markdownIt-Anchor\" href=\"#发送action\">#</a> 发送 action</h2>\n<p><code>store.dispatch(action)</code></p>\n<p>当 store 返回 <code>state</code>  时触发 <code>store.subscribe(()=&gt;&#123;&#125;)</code></p>\n<p><code>store.getState()</code>  获取返回的值</p>\n<h2 id=\"redux三大基本原则\"><a class=\"markdownIt-Anchor\" href=\"#redux三大基本原则\">#</a> Redux 三大基本原则</h2>\n<p>1. 单一数据源</p>\n<p>2.state 是只读的</p>\n<p>3. 使用纯函数来执行修改</p>\n<ul>\n<li>纯函数：输入的内容是什么，输出的内容仍旧是什么</li>\n<li>非纯函数：输入的内容与输出的内容不同，输入的内容再利用非纯函数处理以后将会被改变</li>\n</ul>\n<h1 id=\"react-redux\"><a class=\"markdownIt-Anchor\" href=\"#react-redux\">#</a> React-redux</h1>\n<h2 id=\"为什么需要使用-react-redux\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要使用-react-redux\">#</a> 为什么需要使用 React-Redux</h2>\n<p>在 Redux 使用中，组件和  <code>Redux Store </code> 打交道，读取 Store 的状态，用于初始化组件的状态，同时还要监听 Store 的状态改变；当 Store 状态发生变化时，需要更新组件状态，从而驱动组件重新渲染；当需要更新 Store 状态时，就要派发 action 对象；而且需要根据当前 props 和 state，渲染出用户界面。这个操作过程事情太多了，不容易理解、操作与管理。</p>\n<h2 id=\"安装react-redux\"><a class=\"markdownIt-Anchor\" href=\"#安装react-redux\">#</a> 安装 React-redux</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i redux react-redux --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"provider\"><a class=\"markdownIt-Anchor\" href=\"#provider\">#</a> provider</h2>\n<p>第一步：Provider 嵌套到根组件</p>\n<p>此步骤，是把 redux 的 store 挂载到全局。在 App 下 任何一个组件页面都能拿到。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &#123;<span class=\"comment\">/*store为你引入的store*/</span>&#125;</span><br><span class=\"line\">    &lt;<span class=\"title class_\">Provider</span> store=&#123;store&#125;&gt;</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Audio<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;Generated by create next app&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Head</span>&gt;</span></span></span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;classes.main&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">          datas</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    &lt;/<span class=\"title class_\">Provider</span>&gt;</span><br><span class=\"line\">  )</span><br></pre></td></tr></table></figure>\n<h2 id=\"connext\"><a class=\"markdownIt-Anchor\" href=\"#connext\">#</a> connext</h2>\n<p>第二步：调用 state 和 action</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useDispatch, useSelector &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-redux&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//按需引用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123;play,position,move&#125; = <span class=\"title function_\">useSelector</span>(<span class=\"function\">(<span class=\"params\">state</span>)=&gt;</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">play</span>:state.<span class=\"property\">reducer</span>.<span class=\"property\">play</span>,</span><br><span class=\"line\">    <span class=\"attr\">position</span>:state.<span class=\"property\">positionReducer</span>.<span class=\"property\">position</span>,</span><br><span class=\"line\">    <span class=\"attr\">move</span>:state.<span class=\"property\">positionReducer</span>.<span class=\"property\">move</span></span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\"><span class=\"comment\">//派发器</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dispatch = <span class=\"title function_\">useDispatch</span>()</span><br><span class=\"line\">  <span class=\"title function_\">dispatch</span>(&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;run&#x27;</span>,position&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"封装数据和行为\"><a class=\"markdownIt-Anchor\" href=\"#封装数据和行为\">#</a> 封装数据和行为</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Num</span> = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//数据</span></span><br><span class=\"line\">  <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">play</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//行为(方法)</span></span><br><span class=\"line\">  <span class=\"title function_\">change</span>(<span class=\"params\">play</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(play) &#123;</span><br><span class=\"line\">      play = <span class=\"number\">0</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      play = <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> play</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Num</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"封装reducer\"><a class=\"markdownIt-Anchor\" href=\"#封装reducer\">#</a> 封装 reducer</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Num</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;../Num/positionNum&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> initState = &#123;</span><br><span class=\"line\">  ...<span class=\"title class_\">Num</span>.<span class=\"property\">state</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">reducer</span> = (<span class=\"params\">state = initState,action</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newstate = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(state))</span><br><span class=\"line\">  <span class=\"keyword\">switch</span>(action.<span class=\"property\">type</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;run&#x27;</span>:</span><br><span class=\"line\">      newstate.<span class=\"property\">position</span> = <span class=\"title class_\">Num</span>.<span class=\"title function_\">run</span>(action.<span class=\"property\">position</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&#x27;move&#x27;</span>:</span><br><span class=\"line\">        newstate.<span class=\"property\">move</span> = <span class=\"title class_\">Num</span>.<span class=\"title function_\">move</span>(action.<span class=\"property\">move</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newstate</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> reducer </span><br></pre></td></tr></table></figure>\n<h2 id=\"主仓库store\"><a class=\"markdownIt-Anchor\" href=\"#主仓库store\">#</a> 主仓库 store</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">&quot;./reducer/reducer&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> positionReducer <span class=\"keyword\">from</span> <span class=\"string\">&quot;./reducer/positionReducer&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; combineReducers, legacy_createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;redux&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> reducers =  <span class=\"title function_\">combineReducers</span>(&#123;reducer,positionReducer&#125;)<span class=\"comment\">//连接多个reducer</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">legacy_createStore</span>(reducers)<span class=\"comment\">//创建store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n<h2 id=\"构建项目\"><a class=\"markdownIt-Anchor\" href=\"#构建项目\">#</a> 构建项目</h2>\n",
            "tags": []
        }
    ]
}